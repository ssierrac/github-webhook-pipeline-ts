AWSTemplateFormatVersion: '2010-09-09'
Transform: 
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31
Description: >
  github-webhook-pipeline-ts

  Serverless Architecture for handle github repository webhooks.

Metadata:
  cfn-lint:
    config:
      ignore_checks:
        - ES4000 # Rule disabled because the CatchAll Rule doesn't need a DLQ
        - ES6000 # Rule disabled because SQS DLOs don't need a RedrivePolicy
        - WS2001 # Rule disabled because check does not support !ToJsonString transform
        - ES1001 # Rule disabled because our Lambda functions don't need DestinationConfig.OnFailure
        - W3002

Parameters:
  Stage:
    Type: String
    Default: local
    AllowedValues:
      - local
      - dev
      - prod
  projectName:
    Type: String
    Default: "githubWebhook"
  SecretName:
    Description: Secret Name
    Type: String
    Default: WebhookSecret
    AllowedPattern: ^[a-zA-Z0-9_.-/]*$

Mappings:
  LogsRetentionPeriodMap:
    local:
      Days: 3
    dev:
      Days: 15
    prod:
      Days: 30

Conditions:
  IsProd: !Equals [!Ref Stage, prod]

Globals:
  Api:
    TracingEnabled: true
    OpenApiVersion: 3.0.1
  Function:
    Runtime: nodejs18.x
    MemorySize: 128
    Timeout: 30
    Tracing: Active
    Architectures:
      - arm64
    Environment:
      Variables:
        POWERTOOLS_LOGGER_CASE: PascalCase
        POWERTOOLS_TRACE_DISABLED: "false" # Explicitly disables tracing, default
        POWERTOOLS_LOGGER_LOG_EVENT: !If [IsProd, "false", "true"] # Logs incoming event, default
        POWERTOOLS_LOGGER_SAMPLE_RATE: !If [IsProd, "0.1", "0"] # Debug log sampling percentage, default
        POWERTOOLS_LOG_LEVEL: INFO # Log level for Logger (INFO, DEBUG, etc.), default
        LOG_LEVEL: INFO # Log level for Logger
        SERVICE_NAMESPACE: !Sub "${projectName}.githubWebhook"
        POWERTOOLS_SERVICE_NAME: !Sub "${projectName}.githubWebhook"
        POWERTOOLS_METRICS_NAMESPACE: !Sub "${projectName}.githubWebhook"
    Tags:
      stage: !Ref Stage
      project: !Ref projectName
      namespace: !Sub "${projectName}.githubWebhook"

Resources:
  GithubWebhooksNamespaceParam:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: !Sub "/githubWebhook-prop/${Stage}/${projectName}Namespace"
      Value: !Sub "${projectName}.githubWebhook"

  GithubWebhookSecret:
    Type: AWS::SecretsManager::Secret
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Description: Secret for github repo webhooks
      Name: !Ref SecretName
      GenerateSecretString:
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: stage
          Value: !Ref Stage
        - Key: project
          Value: !Ref projectName

  GithubWebhookSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Tags:
        - Key: stage
          Value: !Ref Stage
        - Key: project
          Value: !Ref projectName


  GithubWebhooksValidationFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GithubWebhooksNamespaceParam
    Properties:
      Handler: WebhookValidationHandler.lambdaHandler
      Environment:
        Variables:
          WEBHOOK_SECRET_NAME: !Ref SecretName
          SNS_TOPIC: !Ref GithubWebhookSNSTopic
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Ref GithubWebhookSecret
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt GithubWebhookSNSTopic.TopicName
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        EntryPoints:
          - src/WebhookValidationHandler.ts

  GithubWebhooksValidationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub "/aws/lambda/${GithubWebhooksValidationFunction}"
      RetentionInDays: !FindInMap [LogsRetentionPeriodMap, !Ref Stage, Days]

  GithubWebhooksApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      EndpointConfiguration:
        Type: REGIONAL
      MethodSettings:
        - MetricsEnabled: true
          ResourcePath: /*
          HttpMethod: "*"
          LoggingLevel: !If [IsProd, ERROR, INFO]
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 100
      AccessLogSetting:
        DestinationArn: !GetAtt GithubWebhooksApiLogGroup.Arn
        Format: !ToJsonString
          requestId: $context.requestId
          integration-error: $context.integration.error
          integration-status: $context.integration.status
          integration-latency: $context.integration.latency
          integration-requestId: $context.integration.requestId
          integration-integrationStatus: $context.integration.integrationStatus
          response-latency: $context.responseLatency
          status: $context.status
      DefinitionBody: !Transform
        Name: "AWS::Include"
        Parameters:
          Location: "api.yaml"
      Tags:
        stage: !Ref Stage
        project: !Ref projectName
  
  GithubWebhooksApiLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
         RetentionInDays: !FindInMap [LogsRetentionPeriodMap, !Ref Stage, Days]

  GithubWebhooksApiIntegrationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Action: sts:AssumeRole
          Principal:
            Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowLambdaInvocation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: 
                  - !GetAtt GithubWebhooksValidationFunction.Arn
  

Outputs:
  # SSM Parameter
  GithubWebhooksNamespace:
    Description: Github Webhooks namespace parameter
    Value: !Ref GithubWebhooksNamespaceParam
  GithubWebhooksNamespaceValue:
    Description: Github Webhooks namespace parameter value
    Value: !GetAtt GithubWebhooksNamespaceParam.Value

  # Lambda Functions
  GithubWebhooksValidationFunctionName:
    Description: GithubWebhooksValidation function name
    Value: !Ref GithubWebhooksValidationFunction
  GithubWebhooksValidationFunctionArn:
    Description: GithubWebhooksValidation function Arn
    Value: !GetAtt GithubWebhooksValidationFunction.Arn

  # Secrets
  GithubWebhookSecret:
    Description: GithubWebhook Secret Arn
    Value: !Ref GithubWebhookSecret
  GithubWebhookSecretCommand:
    Description: Command to get GithubWebhook Secret
    Value: !Sub "aws ssm get-parameter --name /aws/reference/secretsmanager/${SecretName} --with-decryption"
  
  # API Gateway
  BaseUrl:
    Description: Github Webhook API endpoint
    Value: !Sub "https://${GithubWebhooksApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}"
  ApiUrl:
    Description: Github Webhook API endpoint
    Value: !Sub "https://${GithubWebhooksApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${Stage}/"
  
  #SNS TOPIC
  GithubWebhookSNSTopicName:
    Description: GithubWebhook SNS Topic name
    Value: !GetAtt GithubWebhookSNSTopic.TopicName

  GithubWebhookSNSTopicArn:
    Description: GithubWebhook SNS Topic Arn
    Value: !Ref GithubWebhookSNSTopic